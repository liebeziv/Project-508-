Task1 答案
1. 这是可执行文件还是 DLL？
分析: 在 File Header 的 Characteristics 字段中，弹出的提示显示 "File is executable"。
答案: 这是一个可执行文件（.exe）。

2. NT Header/PE Header 从哪个地址开始？
分析: 在 DOS Header 部分，e_lfanew 字段（或称 File address of new exe header）的值指向了 PE Header 的起始地址。
答案: PE Header 的起始地址是 80（十六进制）。

3. 该 PE 文件包含多少个节以及它们是什么？
分析: 在 Section Headers 部分，可以清楚地看到一个包含所有节的列表。
答案: 该文件包含 3 个节，它们分别是 .text、.rsrc 和 .reloc。

4. 入口点地址是什么？
分析: 在 Optional Header 部分，AddressOfEntryPoint 字段的值就是入口点地址。在 PE-Bear 中，该字段显示为 Entry Point。
答案: 入口点地址是 6B4E。

5. 该二进制文件导入和导出了哪些函数？
分析:
在 Imports 部分，该文件从 mscoree.dll 导入了一个名为 _CorExeMain 的函数。
在 Exports 部分，该列表为空。
答案: 该文件从 mscoree.dll 导入了 _CorExeMain 函数，但没有导出任何函数。

6. 该文件能否处理大型地址集？
分析: 有多处证据可以证明：
File Header 的 Characteristics 字段提示 "App can handle >2gb addresses"。
Optional Header 的 Dll Characteristics 字段提示 "Image can handle a high entropy 64-bit virtual address"。
Optional Header 的 Magic 字段值为 10B，表示这是一个 32 位可执行文件，能够处理大于 2GB 的地址空间。
答案: 该文件能够处理大型地址集。

Task2 答案
rule ransomware1_rule
{
  meta:
      author = "Zhengrong Chen"
      description= "依照字符串和文件的属性检测可执行文件ransomware1.exe."
      date = "2025-08-25"
      version = "1.0"

  strings:
      $s1 = "mscoree.dll" wide ascii
      $s2 = "_CoreExeMain" wide ascii

  condition:
      ($s1 and $ s2) and
      pe.entry_point == 0x6B4E and
      pe.number_of_ssections == 3  and
      sha256(0) == "a872d7b04d9d3e9ace68ea1524d278bf35a24a4a1f9ec9f067cdfaf34a88c8a4"

}

Task3答案
1.XZ Utils后门是一种复杂的供应链攻击，其核心思想是将恶意代码秘密地植入一个广泛使用的开源库中，从而使攻击者能够获得大量系统的远程控制。
Exploitation：攻击者通过在版本5.6.0和5.6.1的XZ Utils库中植入恶意代码来利用这一漏洞。这个代码被巧妙地隐藏在压缩的测试文件内，只有在特定的编译环境下才会被激活。当被攻击的Linux系统启动时，sshd(OpenSSH server daemon）会加载
被篡改的liblzma库。恶意代码通过利用glibc IFUNC机制，劫持了OpenSSH的一个函数（RSA_public_decrrypt)，使其能够执行攻击者的代码。
Impact
